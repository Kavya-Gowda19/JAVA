1.Valid Palindrome 125
A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.
Example 1:
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:
Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:
Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.

Constraints:
1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.

class Solution {
    public boolean isPalindrome(String s) {
        String s1=s.toLowerCase();
        int start=0;
        int end=s1.length()-1;
        while(start<=end){
            if(!((s1.charAt(start) >= 97 && s1.charAt(start) <=122 ) ||(s1.charAt(start)>=48 && s1.charAt(start)<=57))){
                start++;
            } else if(!((s1.charAt(end) >= 97 && s1.charAt(end) <= 122)||(s1.charAt(end)>=48 && s1.charAt(end)<=57))){
                end--;
            }else if(s1.charAt(start)!=s1.charAt(end)){
                return false;
            }else{
                start++;
                end--;
            }
        }
        return true;
    }
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.Reverse String 334
Write a function that reverses a string. The input string is given as an array of characters s.
You must do this by modifying the input array in-place with O(1) extra memory.
Example 1:
Input: s = ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]
Example 2:
Input: s = ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]
Constraints:
1 <= s.length <= 105
s[i] is a printable ascii character.

class Solution {
    public void reverseString(char[] s) {
        int start=0;
        int end=s.length-1;
        while(start<=end){
          char temp=s[start];
          s[start]=s[end];
          s[end]=temp;
          start++;
          end--;
        }
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------


